git免费开源的分布式版本控制系统

版本控制：记录历次修改文件内容

版本控制系统分类：

集中化的版本控制系统：SVN
单一服务器集中管理。缺点（单点故障，服务器宕机，则全部无法更新）存储模式：增量式存储

  2.分布式的版本控制系统：git。完整仓储镜像存储

分布式管理：完整镜像存储：存放的是索引

极致的压缩与解压算法

第二节：Git简史

第四节：git结构

工作区—git add—》暂存区—git commit—》本地库

第五节：代码托管中心

本地库，远程库

团队内部协作：一个远程库，团队成员在各自本地库操作与远程库交互

跨团队合作：两个公司的远程库交互，员工只与公司远程库交互。

局域网：gitlib服务器中心

外网环境：github与码云。代码托管中心

第六节：初始化本地仓库

Git命令与linux命令一样的

	查看git安装版本

git --version：查看版本

clear 清屏

设置签名：git config --global user.name " XXX"

设置邮箱：git config --global user.email "xx@.com"

本地仓库的初始化 git init（生成。git目录是隐藏的）

ll -la 查看全部文件

.git库内的文件不要随意修改

第7节 常用命令

添加文件 add 提交文件：commit

	1.先创建文件 Demo.txt

	2.将文件提交到暂存区， git add Demo.txt

	3.将暂存区内容提交到本地库 git commit -m “文件相关描述”

注：1.不放在本地仓库中的文件，git不进行管理

	2.文件放在本地仓库，但不通过git或者commit提交到本地库也不进行git管理

第8节 status命令：查看当前文件是在暂存区还是在本地库

遇到程序奔溃时，删除点.git/index.lock

第9，10节 log命令

git log 查看git修改日志

空格：下一页。b上一页，退出：q

日志展示方式：方式一 git log

方式二：git log --pretty=oneline

方式三：git log --oneline

方式4：git reflog 多了信息：HEAD@{数字}

第11节 reset命令 前进或者后退命令

git reset --hard 索引

reset 参数 hard：本地库的指针移动的同时，重置暂存区与工作区

参数mixed：本地库指针移动，重弄之暂存区，工作区不懂

参数 soft：本地库指针移动，暂存区和工作区都不动。

第13节课：删除文件，找回本地库删除文件

删除文件：rm Test.txt

实质就是回滚到未删除的版本

第14节课：恢复暂存区文件

本地区文件尚未删除，因此，使用reset hard 回滚就好了

第15节：diff命令 比对文件

git diff 文件名：比对的是工作区与暂存区的文件不同

git diff :比较工作区和暂存区全部文件的不同 

git diff HEAD 文件名：将当前指针本地库文件与暂存区进行比较

git diff 索引号（本地库） 文件名（暂存区）：将本地库与暂存区文件进行比较

第16节 分支

在版本控制中，使用多条线同时推进多个任务，多条线指分支

分支好处：可以并行开发，互不影响，提高开发效率。

查看，创建，切换分支

git branch -v 查看所有分支（*号表示当前在哪个分支上）

git branch 新的分支名：创建分支

git checkout  分支名：切换分支

cat 文件名：查看文件内容

分支合并：切换到主分支

git merge 分支名。提示有冲突的部分，在工作区进行修改，之后再次提交，则取消合并状态，且分支取消，冲突解决

第21节初始化本地库

mkdir 文件名 ：创建文件夹

git init 初始化本地仓库

第22节在github上创建一个远程库

第23 在本地创建远程库地址的别名

找到github上远程库的地址，起别名

在git本地将地址保存，通过别名

git remote -v ：查看当前库的地址有没有别名

git remote add 别名 地址：给远程库地址赋予别名

git push 别名 分支：将某分支推送到别名库中

